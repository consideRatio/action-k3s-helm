---
# yamllint disable rule:line-length

name: K3S with Calico and Helm
description: |
  Install Kubernetes (K3S) and Helm 3.
  Includes Calico network plugin for network policy support.

branding:
  icon: server
  color: purple

# Copied from
# https://github.com/jupyterhub/zero-to-jupyterhub-k8s/blob/08c13609c1d0c6cb07d45d49d0a876100cf941eb/ci/common
# Thanks @consideratio !

inputs:
  k3s-version:
    description: K3S version (https://github.com/rancher/k3s/releases)
    required: false
    default: ""
  k3s-channel:
    description: K3S channel (https://update.k3s.io/v1-release/channels)
    required: false
    default: ""
  helm-version:
    description: Helm 3 version (https://github.com/helm/helm/releases)
    required: false
    default: ""
  metrics-enabled:
    description: Enable or disable K3S metrics-server
    required: false
    default: "true"
  traefik-enabled:
    description: Enable or disable K3S Traefik ingress
    required: false
    default: "true"
  docker-enabled:
    description: Enable K3s to use the Docker daemon
    required: false
    default: "false"
  extra-setup-args:
    description: Addition arguments to be passed to the K3S setup script
    required: false
    default: ""

outputs:
  kubeconfig:
    description: Path to kubeconfig file
    value: /etc/rancher/k3s/k3s.yaml

runs:
  using: "composite"
  steps:
    # https://rancher.com/docs/k3s/latest/en/installation/install-options/how-to-flags/
    #
    # NOTE: k3s has a Network Policy controller called kube-router, but it is
    #       not robust enough for use, so we disable it and install our own:
    #       calico. --flannel-backend=none should not be passed if we don't want
    #       to install our own CNI.
    #
    #       ref: https://github.com/rancher/k3s/issues/947#issuecomment-627641541
    #
    # NOTE: k3s 1.16 and older needed a flag named --no-deploy instead of
    #       --disable.
    - name: Validate input
      run: |
        if [[ -n "${{ inputs.k3s-version }}" && -n "${{ inputs.k3s-channel }}" ]]; then
          echo "k3s-version and k3s-channel must not be specified simultaneously!"
          exit 1
        fi
      shell: bash

    - name: Setup k3s ${{ inputs.k3s-version }}${{ inputs.k3s-channel }}
      run: |
        if [[ "${{ inputs.k3s-version }}${{ inputs.k3s-channel }}" == v1.16* ]]; then
          k3s_disable_command=--no-deploy
        else
          k3s_disable_command=--disable
        fi
        if [[ "${{ inputs.metrics-enabled }}" != true ]]; then
          k3s_disable_metrics="${k3s_disable_command} metrics-server"
        fi
        if [[ "${{ inputs.traefik-enabled }}" != true ]]; then
          k3s_disable_traefik="${k3s_disable_command} traefik"
        fi
        if [[ "${{ inputs.docker-enabled }}" == true ]]; then
          k3s_docker=--docker
        fi
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION="${{ inputs.k3s-version }}" INSTALL_K3S_CHANNEL="${{ inputs.k3s-channel }}" sh -s - \
          --write-kubeconfig-mode=666 \
          ${k3s_disable_metrics} \
          ${k3s_disable_traefik} \
          --disable-network-policy \
          --flannel-backend=none \
          ${k3s_docker} \
          ${{ inputs.extra-setup-args }}
      shell: bash

    - name: Export KUBECONFIG environment variable
      run: echo "KUBECONFIG=/etc/rancher/k3s/k3s.yaml" >> $GITHUB_ENV
      shell: bash

    # Install calico as a CNI to enforce our NetworkPolicies. Note that canal
    # could do this job as well, but we failed to set it up in Travis CI.
    #
    # Below we download the calico.yaml Kubernetes manifest and insert a
    # container_settings section just below the phrase '"type": "calico"' and
    # then `kubectl apply` it.
    #
    # ref: https://rancher.com/docs/k3s/latest/en/installation/network-options/
    #
    - name: Setup calico
      run: |
        curl -sfL https://docs.projectcalico.org/v3.17/manifests/calico.yaml \
          | sed '/"type": "calico"/a\
            "container_settings": {\
              "allow_ip_forwarding": true\
            },' \
          | kubectl apply -f -
      shell: bash

    # There will be some waiting for calico to make the k8s Nodes ready and for
    # the k3s related pods to start and become ready, so there is time to
    # install Helm at this point for example.
    - name: Setup Helm ${{ inputs.helm-version }}
      run: |
        curl -sf https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | DESIRED_VERSION="${{ inputs.helm-version }}" bash
      shell: bash

    - name: Wait for calico
      run: |
        kubectl rollout status --watch --timeout 300s daemonset/calico-node -n kube-system
        kubectl rollout status --watch --timeout 300s deployment/calico-kube-controllers -n kube-system
      shell: bash

    - name: Wait for coredns, metrics server, traefik
      run: |
        kubectl rollout status --watch --timeout 300s deployment/coredns -n kube-system
        if [[ "${{ inputs.metrics-enabled }}" == true ]]; then
          kubectl rollout status --watch --timeout 300s deployment/metrics-server -n kube-system
        fi
        # Problem with 1.16, ignore since it'll be dropped soon
        if [[ "${{ inputs.traefik-enabled }}" == true && "${{ inputs.k3s-version }}${{ inputs.k3s-channel }}" != v1.16* ]]; then
          kubectl rollout status --watch --timeout 300s deployment/traefik -n kube-system
        fi
      shell: bash
